-- SET UP SEQUENCE FOR ARTICLE_ID
CREATE SEQUENCE ARTICLE_ID_SEQ
	START WITH 1
	INCREMENT BY 1;
	
-- SET UP TRIGGER FOR INSERT ON ARTICLE_REC
CREATE  OR REPLACE TRIGGER ARTICLE_ID_INSERT
	BEFORE INSERT ON ARTICLE_REC
		FOR EACH ROW
		DECLARE
			NEXTARTICLE_ID NUMBER;
		BEGIN
			-- TRIGGER BODY
			-- GET NEXT NUMBER
			SELECT ARTICLE_ID_SEQ.NEXTVAL INTO NEXTARTICLE_ID FROM DUAL;
			:NEW.ARTICLE_ID := NEXTARTICLE_ID;

		END;
/


-- define new function which is a trigger
CREATE OR REPLACE FUNCTION article_id_insert()
  RETURNS trigger AS
'
BEGIN
	DECLARE
		NEXTARTICLE_ID INTEGER;
	BEGIN
		-- TRIGGER BODY
		-- GET NEXT NUMBER
		INSERT INTO NEXTARTICLE_ID VALUES (NEXTVAL('ARTICLE_ID_SEQ')) INTO NEXTARTICLE_ID FROM DUAL;
		:NEW.ARTICLE_ID := NEXTARTICLE_ID;
	END;
 
	RETURN NEW;
END
-- need this for postgresql
' LANGUAGE plpgsql;


-- bind trigger function to table
CREATE TRIGGER article_id_insert
  BEFORE INSERT
  ON article_rec
  FOR EACH ROW
  EXECUTE PROCEDURE article_id_insert();


 
-- SET UP SEQUENCE FOR ARTICLE_WORD_ID
CREATE SEQUENCE ARTICLE_WORD_ID_SEQ
	START WITH 1
	INCREMENT BY 1;
 
-- SET UP TRIGGER FOR INSERT ON FREQUENCY_REC
CREATE  OR REPLACE TRIGGER ARTICLE_WORD_ID_INSERT
	BEFORE INSERT ON FREQUENCY_REC
		FOR EACH ROW
		DECLARE
			NEXTARTICLE_WORD_ID NUMBER;
		BEGIN
			-- TRIGGER BODY
			-- GET NEXT NUMBER
			SELECT ARTICLE_WORD_ID_SEQ.NEXTVAL INTO NEXTARTICLE_WORD_ID FROM DUAL;
			:NEW.ARTICLE_WORD_ID := NEXTARTICLE_WORD_ID;

		END;
/